<CsvEditor>:
    cells_grid: cells_grid
    title_grid: title_grid
    scroll: scroll
    find: find
    findp: findp

    canvas:

        Color:
            rgba: 42/255,  87/255,  154/255,  1

        Rectangle:
            size: self.size
            pos: self.pos

        Color:
            rgba: 235/255, 245/255, 250/255, 1

        Rectangle:
            pos: self.x, self.y
            size: self.width, self.height-58

    GridLayout:
        cols: 1
        size: root.width, root.height
        padding: [0, 0, 0, 0]

        GridLayout:
            cols: 7
            height: 59
            size_hint: 1, None
            padding: [56, 16, 0, 0]
            spacing: 15

            JoButton:
                size: 70, 40
                text: "Open"
                on_release: root.load(drag="")

            JoButton:
                size: 80, 40
                text: "Save"
                on_release: root.save_file()

            JoButton:
                size: 80, 40
                text: "Save as"
                on_release: root.save_as()

            BoxLayout:
                size_hint: None, 1
                height: 50
                spacing: 7

                JoButton:
                    size: 80, 40
                    text: "Find"
                    on_release: root.find_word()

                FindTextInput:

                    id: find
                    multiline: False
                    pos_hint: {'center_y': 0.44}
                    height: 30
                    width: 20
                    font_name: 'MEIRYO.TTC'
                    size_hint: None, None
                    background_normal: ''
                    background_color: [1, 1, 1, 1]
                    on_focus: root.find_anim(find, findp, findp.pos, fo=True) if self.focus else root.find_anim(find, findp, findp.pos, fo=False)

            FloatLayout:
                id: findp
                size_hint: None, 1
                height: 50
                width: 100
                spacing: 4

                JoButton:
                    text: "=>"
                    size: 25, 28
                    pos_hint: {'x': 0.05, 'y':0.1}
                    canvas.before:
                        PushMatrix
                        Rotate:
                            angle: 90
                            origin: self.center

                    canvas.after:
                        PopMatrix

                    on_release: root.find_order("up")

                JoButton:
                    text: "=>"
                    size: 25, 28
                    pos_hint: {'x': 0.33, 'y':0.1}
                    canvas.before:
                        PushMatrix
                        Rotate:
                            angle: -90
                            origin: self.center

                    canvas.after:
                        PopMatrix

                    on_release: root.find_order("down")

        GridLayout:
            id: title_grid
            size_hint: 1, None
            spacing: [2, 1]
            height: 31


        ScrollView:
            id: scroll
            scroll_type: ['bars']
            bar_width: '10dp'
            bar_color: 42/255,  87/255,  154/255,  1
            scroll_wheel_distance: 60
            effect_cls: 'OpacityScrollEffect'

            GridLayout:
                id: cells_grid
                orientation: "vertical"
                size_hint_y : None
                height: self.minimum_height
                row_default_height: 30
                spacing: [2, 2]





<FindTextInput>
    canvas.before:

        ###Border###
        Color:
            rgba: 235/255, 245/255, 250/255, 1

        Rectangle:
            pos: self.x-3, self.y-3
            size: self.width+6, self.height+6



        ###Upper Border###
        Color:
            rgba: 1, 1, 1, 1

        Rectangle:
            pos: self.x, self.y
            size: self.width, self.height



        ###Curser Drawing###
        Color:
            rgba:
                ([29/255, 111/255, 66/255, 1]
                if self.focus and not self._cursor_blink
                else (0, 0, 0, 0))

        Rectangle:
            pos: [int(x+2) for x in self.cursor_pos]
            size: root.cursor_width, -self.line_height



        ###Text Color###
        Color:
            rgba: self.disabled_foreground_color if self.disabled else (self.hint_text_color if not self.text else self.foreground_color)




<JoTextInput>:
    canvas.before:

        ###On-Focus Border###
        Color:
            rgba: ([42/255,  87/255,  154/255,  1] if self.focus else (1, 1, 1, 1))

        Rectangle:
            pos: self.pos
            size: self.size



        ###On-Focus Upper Border###
        Color:
            rgba: 1, 1, 1, 1

        Rectangle:
            pos: self.x+3, self.y+3
            size: self.width-6, self.height-6



        ###Curser Drawing###
        Color:
            rgba:
                ([29/255, 111/255, 66/255, 1]
                if self.focus and not self._cursor_blink
                else (0, 0, 0, 0))

        Rectangle:
            pos: [int(x) for x in self.cursor_pos]
            size: root.cursor_width, -self.line_height



        ###Text Color###
        Color:
            rgba: self.disabled_foreground_color if self.disabled else (self.hint_text_color if not self.text else self.foreground_color)






<JoButtonLabel>:
    state_image: self.background_normal if self.state == 'normal' else self.background_down
    disabled_image: self.background_disabled_normal if self.state == 'normal' else self.background_disabled_down

    background_normal: ''
    background_color: 42/255,  87/255,  154/255,  1
    color: 1,  1,  1,  1
    size_hint: None, None

    canvas:

        Color:
            rgba: self.background_color

        BorderImage:
            border: self.border
            pos: self.pos
            size: self.size
            source: self.disabled_image if self.disabled else self.state_image

        Color:
            rgba: 1, 1, 1, 1

        Rectangle:
            texture: self.texture
            size: self.texture_size
            pos: int(self.center_x - self.texture_size[0] / 2.), int(self.center_y - self.texture_size[1] / 2.)





<JoButton>:
    state_image: self.background_normal if self.state == 'normal' else self.background_down
    disabled_image: self.background_disabled_normal if self.state == 'normal' else self.background_disabled_down

    background_normal: ''
    background_color: ([235/255, 245/255, 250/255, 1] if not self.state == 'down' else (42/255,  87/255,  154/255,  1))
    color: ([42/255,  87/255,  154/255,  1] if not self.state == 'down' else (1, 1, 1, 1))
    size_hint: None, None

    canvas:

        ####Rounded Border###
        Color:
            rgba: 230/255,  230/255,  230/255,  1

        RoundedRectangle:
            pos: self.x-6, self.y
            size: self.width+12, self.height+7
            radius: [15, 15, 0, 0]

        ###Rounded Upper-Border###
        Color:
            rgba: self.background_color

        RoundedRectangle:
            pos: self.x-4, self.y+1
            size: self.width+8, self.height+4
            radius: [15, 15, 0, 0]


        ###Text Drawing###

        Color:
            rgba: 1, 1, 1, 1

        Rectangle:
            texture: self.texture
            size: self.texture_size
            pos: int(self.center_x - self.texture_size[0] / 2.), int(self.center_y - self.texture_size[1] / 2.)
